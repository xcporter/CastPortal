plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group = 'com.xcporter'
version = '0.0.1-beta'

def jfxversion = "11.0.2"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "no.tornado:tornadofx:1.7.20"
    implementation "de.jensd:fontawesomefx-fontawesome:4.7.0-9.1.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.3.5"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.12.0"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.3"
    implementation "org.jsoup:jsoup:1.13.1"
    implementation "joda-time:joda-time:2.10.6"
    implementation "io.ktor:ktor-client-apache:1.4.2"

    compile "org.openjfx:javafx-base:$jfxversion:win"
    compile "org.openjfx:javafx-graphics:$jfxversion:win"
    compile "org.openjfx:javafx-controls:$jfxversion:win"
    compile "org.openjfx:javafx-media:$jfxversion:win"
    compile "org.openjfx:javafx-fxml:$jfxversion:win"
    compile "org.openjfx:javafx-base:$jfxversion:mac"
    compile "org.openjfx:javafx-graphics:$jfxversion:mac"
    compile "org.openjfx:javafx-controls:$jfxversion:mac"
    compile "org.openjfx:javafx-media:$jfxversion:mac"
    compile "org.openjfx:javafx-fxml:$jfxversion:mac"
    compile "org.openjfx:javafx-base:$jfxversion:linux"
    compile "org.openjfx:javafx-graphics:$jfxversion:linux"
    compile "org.openjfx:javafx-controls:$jfxversion:linux"
    compile "org.openjfx:javafx-media:$jfxversion:linux"
    compile "org.openjfx:javafx-fxml:$jfxversion:linux"

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}

task fatJar(type: Jar) {
    baseName 'castportal'
    manifest {
        attributes "Main-Class": "MainKt"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
